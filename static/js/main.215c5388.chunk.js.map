{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["PAGE_HEIGHT","compute_layout","margin_top","margin_bottom","margin_left","margin_right","n_staves","staff_height","space_between_staves","staves_top_positions","i","push","PreviewCanvas","canvas","x0","y0","x1","y1","ctx","getContext","moveTo","width","height","lineTo","stroke","y","this","props","staffHeight","drawLine","marginLeft","marginRight","refs","beginPath","clearRect","staves_tops","marginTop","marginBottom","nStaves","staff_y0","drawStaff","drawBorder","console","log","_render","ref","React","Component","Controls","doc","jsPDF","line","save","value","min","onChange","changeNStaves","changeStaffHeight","changeMarginTop","changeMarginBottom","changeMarginLeft","changeMarginRight","onClick","generatePDF","bind","App","state","param","newValue","setState","className","n","handleChangeParam","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uPAQMA,EAAc,IAGpB,SAASC,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,GAIA,IAHA,IAAIC,GAAwBR,EAAcE,EAAaC,EAC7CG,EAAWC,IAAkBD,EAAW,GAC9CG,EAAuB,GAClBC,EAAI,EAAGA,EAAIJ,EAAUI,IAC5BD,EAAqBE,KAAKT,EAAaQ,GAAKH,EAAeC,IAE7D,OAAOC,E,IAGHG,E,iLAIKC,EAAQC,EAAIC,EAAIC,EAAIC,GAE3B,IAAMC,EAAML,EAAOM,WAAW,MAC9BD,EAAIE,OAAON,EAAKD,EAAOQ,MA3BR,IA2B4BN,EAAKF,EAAOS,OAAStB,GAChEkB,EAAIK,OAAOP,EAAKH,EAAOQ,MA5BR,IA4B4BJ,EAAKJ,EAAOS,OAAStB,GAChEkB,EAAIM,W,gCAGIX,EAAQE,GAEhB,IAAK,IAAIL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIe,EAAIV,EAAML,EAAIgB,KAAKC,MAAMC,YAAc,EAC3CF,KAAKG,SAAShB,EAAQa,KAAKC,MAAMG,WAAYL,EApChC,IAoCgDC,KAAKC,MAAMI,YAAaN,M,iCAI9EZ,GACTa,KAAKG,SAAShB,EAAQ,EAAG,EAzCV,IAyCyB,GACxCa,KAAKG,SAAShB,EAAQ,EAAGb,EA1CV,IA0CmCA,GAClD0B,KAAKG,SAAShB,EAAQ,EAAG,EAAG,EAAGb,GAC/B0B,KAAKG,SAAShB,EA5CC,IA4CmB,EA5CnB,IA4CkCb,K,gCAIjD,IAAMa,EAASa,KAAKM,KAAKnB,OACnBK,EAAML,EAAOM,WAAW,MAC9BD,EAAIe,YACJf,EAAIgB,UAAU,EAAG,EAAGrB,EAAOQ,MAAOR,EAAOS,QACzC,IAAIa,EAAclC,EAChByB,KAAKC,MAAMS,UACXV,KAAKC,MAAMU,aACXX,KAAKC,MAAMG,WACXJ,KAAKC,MAAMI,YACXL,KAAKC,MAAMW,QACXZ,KAAKC,MAAMC,aAXL,uBAaR,YAAqBO,EAArB,+CAAkC,CAAC,IAA1BI,EAAyB,QAChCb,KAAKc,UAAU3B,EAAQ0B,IAdjB,kFAgBRb,KAAKe,WAAW5B,K,0CAIhB6B,QAAQC,IAAI,qBACZjB,KAAKkB,Y,2CAILF,QAAQC,IAAI,sBACZjB,KAAKkB,Y,+BAKL,OADAF,QAAQC,IAAI,gBAEf,6BAAK,4BAAQE,IAAI,SAASxB,MAAOK,KAAKC,MAAMN,MAAOC,OAAQI,KAAKC,MAAML,c,GA3D3CwB,IAAMC,WAiE5BC,E,sLAGF,IAAIb,EAAclC,EAChByB,KAAKC,MAAMS,UACXV,KAAKC,MAAMU,aACXX,KAAKC,MAAMG,WACXJ,KAAKC,MAAMI,YACXL,KAAKC,MAAMW,QACXZ,KAAKC,MAAMC,aAGTqB,EAAM,IAAIC,EAAM,IAAK,KAAM,MAVnB,uBAWZ,YAAef,EAAf,+CACE,IAD2B,IAApBpB,EAAmB,QACjBL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC7B,IAAIe,EAAIV,EAAML,EAAIgB,KAAKC,MAAMC,YAAc,EAC/CqB,EAAIE,KAAKzB,KAAKC,MAAMG,WAAYL,EArGd,IAqG8BC,KAAKC,MAAMI,YAAaN,EAAG,OAd5D,kFAiBZwB,EAAIG,KAAK,Y,+BAKT,OAEE,6BAEL,+BACA,+BACO,4BACC,gDACD,4BAAI,kBAAC,IAAD,CACEC,MAAO3B,KAAKC,MAAMW,QAClBgB,IAAK,EACLC,SAAU7B,KAAKC,MAAM6B,kBAG3B,4BACC,iDACD,4BAAI,kBAAC,IAAD,CACEH,MAAO3B,KAAKC,MAAMC,YAClB0B,IAAK,EACLC,SAAU7B,KAAKC,MAAM8B,sBAG3B,4BACC,+CACD,4BAAI,kBAAC,IAAD,CACCJ,MAAO3B,KAAKC,MAAMS,UAClBkB,IAAK,EACLC,SAAU7B,KAAKC,MAAM+B,oBAE1B,4BACC,kDACD,4BAAI,kBAAC,IAAD,CACEL,MAAO3B,KAAKC,MAAMU,aAClBiB,IAAK,EACLC,SAAU7B,KAAKC,MAAMgC,uBAE3B,4BACC,gDACD,4BAAI,kBAAC,IAAD,CACEN,MAAO3B,KAAKC,MAAMG,WAClBwB,IAAK,EACLC,SAAU7B,KAAKC,MAAMiC,qBAE3B,4BACC,iDACD,4BAAI,kBAAC,IAAD,CACEP,MAAO3B,KAAKC,MAAMI,YAClBuB,IAAK,EACLC,SAAU7B,KAAKC,MAAMkC,wBAKlC,4BAAQC,QAASpC,KAAKqC,YAAYC,KAAKtC,OAAvC,qB,GA7EsBoB,IAAMC,WAwJdkB,E,YAlEb,WAAYtC,GAAQ,IAAD,8BACjB,4CAAMA,KACDuC,MAAQ,CACXhE,WAAW,GACXC,cAAc,GACdC,YAAY,GACZC,aAAa,GACbC,SAAU,GACVC,aAAc,IARC,E,+EAYD4D,EAAOC,GACvB1B,QAAQC,IAAI,gBACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAIyB,GACE,aAAVD,EACFzC,KAAK2C,SAAS,CAAC/D,SAAU8D,IACN,iBAAVD,EACTzC,KAAK2C,SAAS,CAAC9D,aAAc6D,IACV,eAAVD,EACTzC,KAAK2C,SAAS,CAACnE,WAAYkE,IACR,kBAAVD,EACTzC,KAAK2C,SAAS,CAAClE,cAAeiE,IACX,gBAAVD,EACTzC,KAAK2C,SAAS,CAACjE,YAAagE,IACT,iBAAVD,GACTzC,KAAK2C,SAAS,CAAChE,aAAc+D,M,+BAIvB,IAAD,OACP,OACH,yBAAKE,UAAU,OACN,kBAAC,EAAD,CACEhC,QAASZ,KAAKwC,MAAM5D,SACpBkD,cAAe,SAACe,GAAD,OAAO,EAAKC,kBAAkB,WAAWD,IACxD3C,YAAaF,KAAKwC,MAAM3D,aACxBkD,kBAAmB,SAACc,GAAD,OAAO,EAAKC,kBAAkB,eAAeD,IAChEnC,UAAWV,KAAKwC,MAAMhE,WACtBwD,gBAAiB,SAACa,GAAD,OAAO,EAAKC,kBAAkB,aAAaD,IAC5DlC,aAAcX,KAAKwC,MAAM/D,cACzBwD,mBAAoB,SAACY,GAAD,OAAO,EAAKC,kBAAkB,gBAAgBD,IAClEzC,WAAYJ,KAAKwC,MAAM9D,YACvBwD,iBAAkB,SAACW,GAAD,OAAO,EAAKC,kBAAkB,cAAcD,IAC9DxC,YAAaL,KAAKwC,MAAM7D,aACxBwD,kBAAmB,SAACU,GAAD,OAAO,EAAKC,kBAAkB,eAAeD,MAE3E,6BACA,kBAAC,EAAD,CACWlD,MAAO,IACPC,OAAQ,IACRgB,QAASZ,KAAKwC,MAAM5D,SACpBsB,YAAaF,KAAKwC,MAAM3D,aACxB6B,UAAWV,KAAKwC,MAAMhE,WACtBmC,aAAcX,KAAKwC,MAAM/D,cACzB2B,WAAYJ,KAAKwC,MAAM9D,YACvB2B,YAAaL,KAAKwC,MAAM7D,eAEnC,6BAXA,IAWM,6BAXN,IAWY,mC,GA7DKyC,IAAMC,WCpKJ0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.215c5388.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'rc-input-number/assets/index.css';\nimport * as jsPDF from 'jspdf'\nimport InputNumber from 'rc-input-number';\n\n\nconst PAGE_WIDTH = 210;\nconst PAGE_HEIGHT = 297;\n\n\nfunction compute_layout(\n  margin_top,\n  margin_bottom,\n  margin_left,\n  margin_right,\n  n_staves,\n  staff_height) {\n  var space_between_staves = (PAGE_HEIGHT - margin_top - margin_bottom\n\t\t\t      - (n_staves * staff_height)) / (n_staves - 1);\n  var staves_top_positions = [];\n  for (var i = 0; i < n_staves; i++) {\n    staves_top_positions.push(margin_top + i * (staff_height + space_between_staves));\n  }\n  return staves_top_positions;\n}\n\nclass PreviewCanvas extends React.Component {\n\n  // all params expressed in mm, scaled automatically\n\n  drawLine(canvas, x0, y0, x1, y1) {\n    // console.log('drawing line: ' + x0 + ', ' + y0 + ', ' + x1 + ', ' + y1)\n    const ctx = canvas.getContext(\"2d\");\n    ctx.moveTo(x0 * canvas.width / PAGE_WIDTH, y0 * canvas.height / PAGE_HEIGHT);\n    ctx.lineTo(x1 * canvas.width / PAGE_WIDTH, y1 * canvas.height / PAGE_HEIGHT);\n    ctx.stroke();\n  }\n\n  drawStaff(canvas, y0) {\n    // console.log('drawing staff: ' + y0)\n    for (var i = 0; i < 5; i++) {\n      var y = y0 + (i * this.props.staffHeight / 5);\n      this.drawLine(canvas, this.props.marginLeft, y, PAGE_WIDTH - this.props.marginRight, y);\n    }\n  }\n\n  drawBorder(canvas) {\n    this.drawLine(canvas, 0, 0, PAGE_WIDTH, 0);\n    this.drawLine(canvas, 0, PAGE_HEIGHT, PAGE_WIDTH, PAGE_HEIGHT);\n    this.drawLine(canvas, 0, 0, 0, PAGE_HEIGHT);\n    this.drawLine(canvas, PAGE_WIDTH, 0, PAGE_WIDTH, PAGE_HEIGHT);\n  }\n\n  _render() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    var staves_tops = compute_layout(\n      this.props.marginTop,\n      this.props.marginBottom,\n      this.props.marginLeft,\n      this.props.marginRight,\n      this.props.nStaves,\n      this.props.staffHeight\n    );\n    for (var staff_y0 of staves_tops) {\n      this.drawStaff(canvas, staff_y0);\n    }\n    this.drawBorder(canvas);\n  }\n\n  componentDidMount() {\n    console.log(\"componentdidmount\");\n    this._render();\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentdidupdate\");\n    this._render();\n  }\n\n  render() {\n    console.log(\"re-rendering\");\n    return(\n\t<div><canvas ref=\"canvas\" width={this.props.width} height={this.props.height} /></div>\n    )\n  }\n}\n\n\nclass Controls extends React.Component {\n\n  generatePDF() {\n    var staves_tops = compute_layout(\n      this.props.marginTop,\n      this.props.marginBottom,\n      this.props.marginLeft,\n      this.props.marginRight,\n      this.props.nStaves,\n      this.props.staffHeight\n    );\n\n    var doc = new jsPDF('p', 'mm', 'a4');\n    for (var y0 of staves_tops) {\n      for (var i = 0; i < 5; i++) {\n    \tvar y = y0 + (i * this.props.staffHeight / 5.0 );\n\tdoc.line(this.props.marginLeft, y, PAGE_WIDTH - this.props.marginRight, y, null);\n      }\n    }\n    doc.save('a4.pdf')\n  }\n\n  render() {\n\n    return (\n\n      <div>\n\n\t<table>\n\t<tbody>\n        <tr>\n         <td>Number of staves</td>\n        <td><InputNumber\n              value={this.props.nStaves}\n              min={1}\n              onChange={this.props.changeNStaves}/></td>\n        </tr>\n\n        <tr>\n         <td>Staff height (mm)</td>\n        <td><InputNumber\n              value={this.props.staffHeight}\n              min={0}\n              onChange={this.props.changeStaffHeight}/></td>\n        </tr>\n\n        <tr>\n         <td>Top Margin (mm)</td>\n        <td><InputNumber\n             value={this.props.marginTop}\n             min={0}\n             onChange={this.props.changeMarginTop}/></td>\n        </tr>\n        <tr>\n         <td>Bottom Margin (mm)</td>\n        <td><InputNumber\n              value={this.props.marginBottom}\n              min={0}\n              onChange={this.props.changeMarginBottom}/></td>\n        </tr>\n        <tr>\n         <td>Left Margin (mm)</td>\n        <td><InputNumber\n              value={this.props.marginLeft}\n              min={0}\n              onChange={this.props.changeMarginLeft}/></td>\n        </tr>\n        <tr>\n         <td>Right Margin (mm)</td>\n        <td><InputNumber\n              value={this.props.marginRight}\n              min={0}\n              onChange={this.props.changeMarginRight}/></td>\n        </tr>\n\t</tbody>\n\t</table>\n\n\t<button onClick={this.generatePDF.bind(this)}>generate pdf</button>\n    </div>\n    );\n  }\n}\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      margin_top:20,\n      margin_bottom:20,\n      margin_left:20,\n      margin_right:20,\n      n_staves: 12,\n      staff_height: 10\n    };\n  }\n\n  handleChangeParam(param, newValue) {\n    console.log(\"change param\");\n    console.log(param);\n    console.log(newValue);\n    if (param === 'n_staves') {\n      this.setState({n_staves: newValue});\n    } else if (param === 'staff_height') {\n      this.setState({staff_height: newValue});\n    } else if (param === 'margin_top') {\n      this.setState({margin_top: newValue});\n    } else if (param === 'margin_bottom') {\n      this.setState({margin_bottom: newValue});\n    } else if (param === 'margin_left') {\n      this.setState({margin_left: newValue});\n    } else if (param === 'margin_right') {\n      this.setState({margin_right: newValue});\n    }\n  }\n\n  render() {\n    return (\n\t<div className=\"App\">\n          <Controls\n            nStaves={this.state.n_staves}\n            changeNStaves={(n) => this.handleChangeParam('n_staves',n)}\n            staffHeight={this.state.staff_height}\n            changeStaffHeight={(n) => this.handleChangeParam('staff_height',n)}\n            marginTop={this.state.margin_top}\n            changeMarginTop={(n) => this.handleChangeParam('margin_top',n)}\n            marginBottom={this.state.margin_bottom}\n            changeMarginBottom={(n) => this.handleChangeParam('margin_bottom',n)}\n            marginLeft={this.state.margin_left}\n            changeMarginLeft={(n) => this.handleChangeParam('margin_left',n)}\n            marginRight={this.state.margin_right}\n            changeMarginRight={(n) => this.handleChangeParam('margin_right',n)}\n\t/>\n\t<div>\n\t<PreviewCanvas\n            width={400}\n            height={600}\n            nStaves={this.state.n_staves}\n            staffHeight={this.state.staff_height}\n            marginTop={this.state.margin_top}\n            marginBottom={this.state.margin_bottom}\n            marginLeft={this.state.margin_left}\n            marginRight={this.state.margin_right}\n\t/>\n\t<br/>\t<br/>\t<br/>\n\n\t</div>\n\t</div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}